{"ast":null,"code":"var _jsxFileName = \"/Users/yuqixiao/around-web/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 16,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction Register(props) {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    const {\n      username,\n      password\n    } = values;\n    const opt = {\n      method: \"POST\",\n      url: `${BASE_URL}/signup`,\n      data: {\n        username: username,\n        password: password\n      },\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    axios(opt).then(response => {\n      console.log(response);\n\n      if (response.status === 200) {\n        message.success(\"Registration succeed!\");\n        props.history.push(\"/login\");\n      }\n    }).catch(error => {\n      console.log(\"register failed: \", error.message);\n      message.info(\"Registration failed!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        required: true,\n        message: \"Please input your Username!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: [\"password\"],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: \"Please confirm your password!\"\n      }, _ref => {\n        let {\n          getFieldValue\n        } = _ref;\n        return {\n          validator(rule, value) {\n            if (!value || getFieldValue(\"password\") === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(\"The two passwords that you entered do not match!\");\n          }\n\n        };\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"register-btn\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/yuqixiao/around-web/src/components/Register.js"],"names":["React","Form","Input","Button","message","axios","BASE_URL","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","props","form","useForm","onFinish","values","console","log","username","password","opt","method","url","data","headers","then","response","status","success","history","push","catch","error","info","required","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\n\nimport { BASE_URL } from \"../constants\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 16,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction Register(props) {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    const { username, password } = values;\n    const opt = {\n      method: \"POST\",\n      url: `${BASE_URL}/signup`,\n      data: {\n        username: username,\n        password: password\n      },\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    axios(opt)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          message.success(\"Registration succeed!\");\n          props.history.push(\"/login\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"register failed: \", error.message);\n        message.info(\"Registration failed!\");\n      });\n  };\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      className=\"register\"\n    >\n      <Form.Item\n        name=\"username\"\n        label=\"Username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Username!\"\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\"\n          }\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: \"Please confirm your password!\"\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue(\"password\") === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(\n                \"The two passwords that you entered do not match!\"\n              );\n            }\n          })\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"register-btn\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}